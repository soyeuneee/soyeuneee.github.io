<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[soyeuneee.github.io]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>soyeuneee.github.io</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Wed, 10 Jul 2024 04:33:31 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 10 Jul 2024 04:33:30 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[2024.07.07]]></title><description><![CDATA[ 
 <br>-파이토치(PyTorch):<br>
파이썬 러닝 라이브러리.<br>
파이토치 특징1. Numpy와 유사하지만 GPU 상에서 실행 가능한 n차원 Tensor.<br>
파이토치 특징2. 신경망을 구성하고 학습하는 과정에서 자동 미분.<br>
-CNN(Convolutional Neural Network):<br>
입력된 이미지를 "합성곱" 연산을 중심으로 분석한 뒤, 이 데이터를 한 줄로 편 다음(flatten) 복잡하게 얽히고 연결된 신경망에 넣어 이미지를 "확률론적으로" 인식.<br>
이미지와 같은 멀티미디어에 강함.<br>
-RESNET(Residual Neural Network):<br>
152개의 층을 가지는 구조.<br>
레이어의 input이 다른 레이어로 곧바로 건너뛰어버리는 것이 특징적.<br>
입력값들이 중간의 특정 레이어를 모두 거지 않고 한번에 건너뛴다는 의미.<br>
VggNet을 베이스로 했으며, 지름길(Shortcut)을 연결해 잔차(Residual)를 최소화하도록 학습됨.]]></description><link>tags\2024.07.07.html</link><guid isPermaLink="false">Tags/2024.07.07.md</guid><pubDate>Tue, 09 Jul 2024 12:23:29 GMT</pubDate></item><item><title><![CDATA[2024.07.09]]></title><description><![CDATA[ 
 <br>-오늘의 모각코 목표: 파이토치 공부.<br>-참고영상: 이수안컴퓨터연구소-파이토치 한번에 끝내기 PyTorch Full Tutorial Course<br>-파이토치(PyTorch):<br>
초기 루아(Lua) 언어로 개발된 토치(Torch)를 파이썬 버전으로 개발하여 2017년도에 공개.<br>
초기의 토치는 넘파이 라이브러리처럼 과학 연산을 위한 라이브러리로 공개됨.<br>
이후 GPU를 이용한 텐서 조작 및 동적 신경망 구축이 가능하도록 딥러닝 프레임워크로 발전.<br>
유연하며 가속화된 계산 속도를 제공.<br>
-파이토치 모듈 구조:<br>
<img alt="Pasted image 20240709221405.jpg" src="lib\media\pasted-image-20240709221405.jpg">  -파이토치 구성요소:<br>
torch: 메인 네임스페이스, 텐서 등의 다양한 수학 함수 포함.<br>
torch.autograd: 자동 미분 기능을 제공하는 라이브러리.<br>
torch.nn: 신경망 구축을 위한 데이터 구조나 레이어 등의 라이러리.<br>
torch.multiprocessing: 병렬처리 기능을 제공하는 라이브러리.<br>
torch.optim: SGD를 중심으로 한 파라미터 최적화 알고리즘을 제공.<br>
torch.utils: 데이터 조작 등 유틸리티 기능 제공.<br>
torch.onnx: ONNX, 서로 다른 프레임워크 간의 모델 공유 시 사용.<br>
-텐서(Tensors):<br>
데이터 표현을 위한 기본 구조로 텐서를 사용.<br>
텐서는 데이터를 담기 위한 컨테이너로서 일반적으로 수치형 데이터를 저장.<br>
넘파이의 ndarray와 유사.<br>
GPU를 사용한 연산 가속 가능.<br>
-CUDA Tensors:<br>
.to 메소드를 사용하여 텐서를 장치(cpu, gpu)로 이동시킬 수 있음.<br>
-다차원 텐서 표현:<br>
OD Tensor(Scalar): 하나의 숫자를 담고 있는 텐서.<br>
축과 형상이 없음.<br>
1D Tensor(Vector): 값들을 저장한 리스트와 유사한 텐서.<br>
하나의 축이 존재.<br>
2D Tensor(Matrix):  행렬과 같은 모양으로 두개의 축이 존재.<br>
일반적 수치, 통계 데이터셋이 해당.<br>
주로 샘플과 특성을 가진 구조로 사용됨.<br>
3D Tensor: 큐브와 같은 모양으로 세개의 축이 존재.<br>
데이터가 연속된 시퀀스 데이터나 시간 축이 포함된 시계열 데이터에 해당.<br>
주식 가격 데이터셋, 시간에 따른 질병 발병 데이등.<br>
주로 샘플, 타임스텝, 특성을 가진 구조로 사용됨.<br>
4D Tensor: 네개의 축이 존재.<br>
컬러 이미지 데이터가 대표적 사례.(흑백이미지이터는 3D Tensor로 가능.)<br>
주로 샘플, 높이, 너비, 컬러 채널을 가진 구조로 사용됨.<br>
5D Tensor: 다섯개의 축이 존재.<br>
비디오 데이터가 대표적 사례.<br>
주로 샘플, 프레임, 높이, 너비, 컬러 채널을 가진 구로 사용됨.<br>
-텐서의 연산(Operations):<br>
텐서에 대한 수학 연산, 삼각함수, 비트 연산, 비교 연산, 집계 등.<br>
max와 min은 dim 인자를 줄 경우 argmax와 argmin도 함께 return됨.<br>
argmax: 최대값을 가진 인덱스.<br>
argmin: 최소값을 가진 인덱스.]]></description><link>tags\2024.07.09.html</link><guid isPermaLink="false">Tags/2024.07.09.md</guid><pubDate>Tue, 09 Jul 2024 14:13:31 GMT</pubDate><enclosure url="lib\media\pasted-image-20240709221405.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="lib\media\pasted-image-20240709221405.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Obsidian template for using github.io]]></title><description><![CDATA[ 
 <br><br>&lt;1주차(2024.07.07)&gt;<br>
-파이토치(PyTorch):<br>
파이썬 러닝 라이브러리.<br>
파이토치 특징1. Numpy와 유사하지만 GPU 상에서 실행 가능한 n차원 Tensor.<br>
파이토치 특징2. 신경망을 구성하고 학습하는 과정에서 자동 미분.<br>
-CNN(Convolutional Neural Network):<br>
입력된 이미지를 "합성곱" 연산을 중심으로 분석한 뒤, 이 데이터를 한 줄로 편 다음(flatten) 복잡하게 얽히고 연결된 신경망에 넣어 이미지를 "확률론적으로" 인식.<br>
이미지와 같은 멀티미디어에 강함.<br>
-RESNET(Residual Neural Network):<br>
152개의 층을 가지는 구조.<br>
레이어의 input이 다른 리이어로 곧바로 건너뛰어버리는 것이 특징.<br>
입력값들이 중간의 특정 레이어를 모두 거치지 않고 한번에 건너뛴다는 의미.<br>
VggNet을 베이스로 했으며, 지름길(Shortcut)을 연결해 잔차(Residual)를 최소화하도록 학습됨.]]></description><link>readme.html</link><guid isPermaLink="false">README.md</guid><pubDate>Sun, 07 Jul 2024 05:30:07 GMT</pubDate></item><item><title><![CDATA[Vault]]></title><description><![CDATA[ 
 ]]></description><link>vault.html</link><guid isPermaLink="false">Vault.md</guid><pubDate>Sun, 07 Jul 2024 03:33:29 GMT</pubDate></item><item><title><![CDATA[test]]></title><description><![CDATA[ 
 <br>안녕하세요!<br>
테스트 페이지입니다.]]></description><link>test.html</link><guid isPermaLink="false">test.md</guid><pubDate>Wed, 26 Jun 2024 14:10:59 GMT</pubDate></item><item><title><![CDATA[index]]></title><description><![CDATA[ 
 <br>]]></description><link>index.html</link><guid isPermaLink="false">index.md</guid><pubDate>Wed, 26 Jun 2024 13:06:53 GMT</pubDate></item></channel></rss>